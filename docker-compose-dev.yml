services:
  drtss:
    image: ghcr.io/yulcom-technologies-burkina/gump-drtss-ms:$COMMIT_SHA
    container_name: gump-drtss-backend
    depends_on:
      - drtss-database
      - eureka-server
    restart: on-failure
    networks:
      - gump-network
    ports:
      - 8082:8082
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://drtss-database:5432/gump
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/

  tresor:
    image: ghcr.io/yulcom-technologies-burkina/gump-tresor-ms:$COMMIT_SHA
    container_name: gump-tresor-backend
    depends_on:
      - tresor-database
      - eureka-server
    restart: on-failure
    networks:
      - gump-network
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://tresor-database:5432/gump
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/

  eureka-server:
    image: ghcr.io/yulcom-technologies-burkina/gump-eureka-server:$COMMIT_SHA
    container_name: gump-drtss-eureka-server
    networks:
      - gump-network
    ports:
      - 8761:8761

  users-database:
    image: postgres:16.4
    networks:
      - gump-network
    volumes:
      - users-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=gump
      - POSTGRES_PASSWORD=gump
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 5429:5432

  tresor-database:
    image: postgres:16.4
    networks:
      - gump-network
    volumes:
      - tresor-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=gump
      - POSTGRES_PASSWORD=gump
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 5430:5432

  drtss-database:
    image: postgres:16.4
    networks:
      - gump-network
    volumes:
      - drtss-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=gump
      - POSTGRES_PASSWORD=gump
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}' ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 5431:5432


  keycloak-database:
    image: postgres:16.4
    networks:
      - gump-network
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=gump
      - POSTGRES_PASSWORD=gump
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}' ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 5422:5432


  keycloak:
    networks:
      - gump-network
    container_name: gump-keycloak
    depends_on:
      - keycloak-database
    image: quay.io/keycloak/keycloak:24.0.3
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-database/gump
      KC_DB_USERNAME: gump
      KC_DB_PASSWORD: gump
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: true
      KC_PROXY_ADDRESS_FORWARDING: true
      KC_PROXY: edge
    ports:
      - "9080:8080"
    command:
      - start-dev
      - --proxy-headers=xforwarded
      - --hostname-strict=false
      - --hostname-strict-https=true
    volumes:
      - keycloak_data:/opt/keycloak/data
    restart: always

  gump-gateway:
    depends_on:
      - keycloak
    image: ghcr.io/yulcom-technologies-burkina/gump-gateway:$COMMIT_SHA
    container_name: gump-gateway-backend
    networks:
      - gump-network
    ports:
      - 9090:9090
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:9080
      - KEYCLOAK_REALM=myrealm

volumes:
  drtss-data:
  tresor-data:
  users-data:
  keycloak_data:
  keycloak-db-data:

networks:
  gump-network:
