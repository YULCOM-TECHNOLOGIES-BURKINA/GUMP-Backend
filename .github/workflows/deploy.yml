name: Build and deploy micro-services

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REMOTE_HOST: 54.37.13.176
  REMOTE_USER: ubuntu

jobs:
  build:
    strategy:
      matrix:
        ms: [drtss-ms, tresor-ms, gateway]
    defaults:
      run:
        working-directory: ${{matrix.ms}}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - run: ls

      - name: Build ${{matrix.ms}}
        run: mvn clean install

      - name: Log in to registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u kulturman --password-stdin

      - name: build-docker-image
        run: docker build --tag ghcr.io/yulcom-technologies-burkina/gump-${{matrix.ms}}:latest . && docker push ghcr.io/yulcom-technologies-burkina/gump-${{matrix.ms}}:latest

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Copy docker-compose file to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose-dev.yml"
          target: "/home/ubuntu/gump/docker-compose-dev.yml"
      - run: ls
      - name: Deploy to dev environnement
        uses: appleboy/ssh-action@v1.0.3
        with:
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd gump
            echo BACKEND_IMAGE=$BACKEND_IMAGE > .env
            docker-compose -f docker-compose-dev.yml up -d
